// dbdiagram.io

CREATE TABLE "Condominium"
(
    "id"      INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name"    varchar,
    "address" varchar
);

CREATE TABLE "User"
(
    "id"         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "first_name" varchar,
    "last_name"  varchar,
    "password"   varchar,
    "email"      varchar UNIQUE,
    "role"       varchar
);

CREATE TABLE "CondominiumUser"
(
    "condominium_id" int,
    "user_id"        int,
    "apartment_id"   int,
    "Primary"        "Key(condominium_id, user_id)"
);

CREATE TABLE "Apartment"
(
    "id"             INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "fraction"       varchar,
    "condominium_id" int
);

CREATE TABLE "Document"
(
    "id"             INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "file_data"      oid,
    "name"           varchar,
    "upload_date"    timestamp,
    "type_id"        int,
    "user_id"        int,
    "uploader_id"    int,
    "condominium_id" int
);

CREATE TABLE "DocumentType"
(
    "id"   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "type" varchar
);

CREATE TABLE "Payment"
(
    "id"              INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "amount"          decimal,
    "payment_date"    timestamp,
    "payment_type_id" int,
    "user_id"         int,
    "condominium_id"  int
);

CREATE TABLE "PaymentType"
(
    "id"   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "type" varchar
);

CREATE TABLE "Anomaly"
(
    "id"             INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "description"    text,
    "report_date"    timestamp,
    "status_id"      int,
    "user_id"        int,
    "condominium_id" int
);

CREATE TABLE "AnomalyStatus"
(
    "id"     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "status" varchar
);

CREATE TABLE "Meeting"
(
    "id"              INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "meeting_date"    timestamp,
    "location"        varchar,
    "condominium_id"  int,
    "zoom_link"       varchar,
    "zoom_meeting_id" varchar,
    "zoom_password"   varchar
);

CREATE TABLE "MeetingTranscript"
(
    "id"         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "transcript" text,
    "meeting_id" int
);

CREATE TABLE "Vote"
(
    "id"             INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "question"       text,
    "vote_date"      timestamp,
    "condominium_id" int
);

CREATE TABLE "VoteOption"
(
    "id"       INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "response" boolean,
    "user_id"  int,
    "vote_id"  int
);

CREATE TABLE "ChatbotSession"
(
    "id"         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "session_id" varchar,
    "start_time" timestamp,
    "end_time"   timestamp,
    "user_id"    int
);

CREATE TABLE "ChatbotMessage"
(
    "id"         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "message"    text,
    "time"       timestamp,
    "sender"     varchar,
    "session_id" int
);

CREATE TABLE "AiQuestion"
(
    "id"       INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "answer"   text,
    "placeholder" text
);

CREATE TABLE "AiAnswer"
(
    "id"         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "answer"     text,
    "question_id" int,
    "transcript_id" int
);

ALTER TABLE "AiAnswer"
    ADD FOREIGN KEY ("question_id") REFERENCES "AiQuestion" ("id");

ALTER TABLE "AiAnswer"
    ADD FOREIGN KEY ("transcript_id") REFERENCES "MeetingTranscript" ("id");

ALTER TABLE "CondominiumUser"
    ADD FOREIGN KEY ("condominium_id") REFERENCES "Condominium" ("id");

ALTER TABLE "CondominiumUser"
    ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");

ALTER TABLE "CondominiumUser"
    ADD FOREIGN KEY ("apartment_id") REFERENCES "Apartment" ("id");

ALTER TABLE "Apartment"
    ADD FOREIGN KEY ("condominium_id") REFERENCES "Condominium" ("id");

ALTER TABLE "Document"
    ADD FOREIGN KEY ("type_id") REFERENCES "DocumentType" ("id");

ALTER TABLE "Document"
    ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");

ALTER TABLE "Document"
    ADD FOREIGN KEY ("uploader_id") REFERENCES "User" ("id");

ALTER TABLE "Document"
    ADD FOREIGN KEY ("condominium_id") REFERENCES "Condominium" ("id");

ALTER TABLE "Payment"
    ADD FOREIGN KEY ("payment_type_id") REFERENCES "PaymentType" ("id");

ALTER TABLE "Payment"
    ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");

ALTER TABLE "Payment"
    ADD FOREIGN KEY ("condominium_id") REFERENCES "Condominium" ("id");

ALTER TABLE "Anomaly"
    ADD FOREIGN KEY ("status_id") REFERENCES "AnomalyStatus" ("id");

ALTER TABLE "Anomaly"
    ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");

ALTER TABLE "Anomaly"
    ADD FOREIGN KEY ("condominium_id") REFERENCES "Condominium" ("id");

ALTER TABLE "Meeting"
    ADD FOREIGN KEY ("condominium_id") REFERENCES "Condominium" ("id");

ALTER TABLE "MeetingTranscript"
    ADD FOREIGN KEY ("meeting_id") REFERENCES "Meeting" ("id");

ALTER TABLE "Vote"
    ADD FOREIGN KEY ("condominium_id") REFERENCES "Condominium" ("id");

ALTER TABLE "VoteOption"
    ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");

ALTER TABLE "VoteOption"
    ADD FOREIGN KEY ("vote_id") REFERENCES "Vote" ("id");

ALTER TABLE "ChatbotSession"
    ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");

ALTER TABLE "ChatbotMessage"
    ADD FOREIGN KEY ("session_id") REFERENCES "ChatbotSession" ("id");
